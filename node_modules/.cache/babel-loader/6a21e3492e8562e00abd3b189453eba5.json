{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/Users/Mr. Akshay/Documents/React/Project 1/reactnd-project-myreads-starter-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Mr. Akshay/Documents/React/Project 1/reactnd-project-myreads-starter-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Mr. Akshay/Documents/React/Project 1/reactnd-project-myreads-starter-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Mr. Akshay/Documents/React/Project 1/reactnd-project-myreads-starter-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mr. Akshay\\\\Documents\\\\React\\\\Project 1\\\\reactnd-project-myreads-starter-master\\\\src\\\\Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport * as BooksAPI from './BooksAPI';\n/*\r\n\tCreated by Akshay Niranjan\r\n\tLast Modified\r\n\t12th May 2021\r\n*/\n\nvar Search = /*#__PURE__*/function (_Component) {\n  _inherits(Search, _Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      query: '',\n      newBooks: [],\n      searchError: false\n    };\n\n    _this.getBooks = function (event) {\n      //using book api we can search to find a list of books\n      var query = event.target.value;\n\n      _this.setState({\n        query\n      });\n\n      var words = query.replace(/[^\\w\\s]/gi, '').split(\" \");\n      var book_filter = BooksAPI.getAll(); //run search if user input is found\n\n      _this.setState({\n        newBooks: book_filter,\n        searchError: false\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.setState({\n        query: '',\n        newBooks: [],\n        searchError: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          query = _this$state.query,\n          newBooks = _this$state.newBooks,\n          searchError = _this$state.searchError;\n      var _this$props = this.props,\n          book_array = _this$props.book_array,\n          changeShelfFunc = _this$props.changeShelfFunc;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-bar\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"close-search\",\n            to: \"/\",\n            onClick: this.clearQuery,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-books-input-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search by title or author\",\n              value: query,\n              onChange: this.getBooks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-results\",\n          children: [newBooks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Search returned \", newBooks.length, \" books \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"books-grid\",\n              children: newBooks.map(function (book) {\n                return /*#__PURE__*/_jsxDEV(Book, {\n                  book: book,\n                  book_array: book_array,\n                  changeShelfFunc: changeShelfFunc\n                }, book.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), searchError && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search did not return any books. Please try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    } //accidentally didnt tab render, fix later\n\n  }]);\n\n  return Search;\n}(Component);\n\nSearch.propTypes = {\n  book_array: PropTypes.array.isRequired,\n  changeShelfFunc: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/Mr. Akshay/Documents/React/Project 1/reactnd-project-myreads-starter-master/src/Search.js"],"names":["React","Component","PropTypes","Link","Book","BooksAPI","Search","state","query","newBooks","searchError","getBooks","event","target","value","setState","words","replace","split","book_filter","getAll","clearQuery","props","book_array","changeShelfFunc","length","map","book","id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\nimport * as BooksAPI from './BooksAPI';\r\n/*\r\n\tCreated by Akshay Niranjan\r\n\tLast Modified\r\n\t12th May 2021\r\n*/\r\nclass Search extends Component {\r\n    static propTypes = {\r\n        book_array: PropTypes.array.isRequired,\r\n        changeShelfFunc: PropTypes.func.isRequired\r\n    };\r\n\r\n    state = {\r\n        query: '',\r\n        newBooks: [],\r\n        searchError: false\r\n    };\r\n\r\n    getBooks = event => {//using book api we can search to find a list of books\r\n        const query = event.target.value;\r\n        this.setState({ query });\r\n        let words = query.replace(/[^\\w\\s]/gi, '').split(\" \");\r\n        let book_filter = BooksAPI.getAll();\r\n        //run search if user input is found\r\n        \r\n        this.setState({ newBooks: book_filter, searchError: false });\r\n    };\r\n\r\n    clearQuery = () => {\r\n        this.setState({\r\n            query: '',\r\n            newBooks: [],\r\n            searchError: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { query, newBooks, searchError } = this.state;\r\n        const { book_array, changeShelfFunc } = this.props;\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\" onClick={this.clearQuery}>Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                            value={query}\r\n                            onChange={this.getBooks}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    {newBooks.length > 0 && (\r\n                        <div>\r\n                            <h3>Search returned {newBooks.length} books </h3>\r\n                            <ol className=\"books-grid\">\r\n                                {newBooks.map(book => (\r\n                                    <Book\r\n                                        book={book}\r\n                                        book_array={book_array}\r\n                                        key={book.id}\r\n                                        changeShelfFunc={changeShelfFunc}\r\n                                    />\r\n                                ))}\r\n                            </ol>\r\n                        </div>\r\n                    )}\r\n                    {searchError && (<h3>Search did not return any books. Please try again!</h3>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }//accidentally didnt tab render, fix later\r\n}\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}